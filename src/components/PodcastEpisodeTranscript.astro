---
import PodcastEpisodeTranscriptLine from './PodcastEpisodeTranscriptLine.astro'	

export interface Props {
	utterances: object[]
}

const { utterances } = Astro.props;

---
<style is:global>
	@reference "../styles/global.css";

.transcript {
	
	@apply mt-2 relative overflow-y-hidden;
	max-height: 100vh; /* Set the maximum height to 50% of the viewport height */
	/* no scrollbar */
	-ms-overflow-style: none;  /* IE and Edge */
	scrollbar-width: none;  /* Firefox */

	&.show {
		max-height: 100%;
		@apply overflow-visible;
	}

 .utterance {
		@apply text-base md:text-lg text-coolGray-500 leading-relaxed p-2 hover:bg-gray-100 mb-1;
		h4 { @apply font-bold mb-2;	}
		span.time { @apply font-normal ml-2 text-base; }
		p { @apply m-0; }

		&.highlight {
			@apply bg-gray-100;
		}

		&:hover:before {
			/* show svg left side of the div */
			content: '';
			@apply hidden md:inline-block;
			width: 2rem;
			height: 2rem;
			background-image: url(/images/elements/play-button.svg);
			background-repeat: no-repeat;
			background-size: contain;
			background-position: center;
			margin-right: 0.5rem;
			position: absolute;
			left: -2.5rem;
		}
		a {
			@apply no-underline;
			img {
				@apply w-4 h-4 inline-block ml-2 m-auto;
			}
		}
 }
 .overlay {
		@apply absolute top-0 left-0 w-full h-full cursor-pointer;
		background-image: linear-gradient(rgba(255,255,255,0), rgba(255,255,255,1));
 }
 
}
#sharing-link-url {
	@apply text-sm text-coolGray-900;
}
</style>

<script>
	// Piwik tracking
	var _paq = window._paq || [];

	const trackEvent = function(eventType) {
		const name = window.playerConfiguration.episode.title || 'unknown'										
		_paq.push(['trackEvent', 'transcript', eventType, name]);
		console.log('trackEvent', eventType, name);
	}

	window.showFullTranscript = function() {
		const transcript = document.querySelector('.transcript');
		if (!transcript.classList.contains('show')) {
			transcript.classList.add('show');
			transcript.querySelector('.overlay').style.display = 'none';
		}
		trackEvent('show');
		document.getElementById('showFullTranscriptButton').classList.add('hidden');
		return true;
	}
	window.showSharingLink = function(seconds, event) {
		// link is the current link with the fragement #t=seconds
		// show a simple popup showing the link to the user and add a button to copy it to the clipboard
		const link = window.location.href.split('#')[0] + '#t=' + seconds;
		const popup = document.getElementById('sharing-link-popup');
		const url = document.getElementById('sharing-link-url');
		url.innerText = link;
		popup.classList.remove('hidden');
		navigator.clipboard.writeText(link);
		event.stopPropagation();

		trackEvent('share');

		return false;
	}

	// Handler to jump to a specific time
	// in the podcast if #t=seconds is in the url
	window.addEventListener('DOMContentLoaded', (event) => {
		const hash = window.location.hash;
		if (hash && hash.startsWith('#t=')) {
			const time = parseInt(hash.substring(3));

			trackEvent('incoming-link');

			//find utterance div based on data-trans-start, time should be in between
			const utterances = document.querySelectorAll('.utterance')
			let element = null;
			utterances.forEach((utterance, i) => {
				const start = parseInt(utterance.dataset.transStart);
				if (start <= time && (!utterances[i+1] || utterances[i+1].dataset.transStart > time)) {
					console.log('found', utterance, start, time);
					element = utterance;
				}
			});
			if (element) {
				window.showFullTranscript();
				element.classList.add('highlight');
				element.scrollIntoView();
			}
		}
	});
</script>

{
	utterances.length > 0 && (
			<div class="transcript">
					<div class="overlay" onclick="showFullTranscript()">&nbsp;</div>
					<h3 class="mb-4 text-2xl md:text-3xl font-semibold text-coolGray-800" id="transcript">Transkript</h3>
					<div class="text-gray-500 text-xs mb-4">Das Transkript wurde automatisiert per Speech-to-Text erstellt und kann daher Fehler enthalten.</div>
					{utterances.map((utterance, i) => (
							<PodcastEpisodeTranscriptLine utterance={utterance} />
					))}
			</div>
			<div id="showFullTranscriptButton" class="flex justify-center">
				<button class="text-coolGray-500 hover:text-coolGray-700 border border-coolGray-500 rounded-lg p-3"
				onclick="showFullTranscript()">Ganzes Transkript anzeigen</button>
			</div>
	)
}

<div id="sharing-link-popup" class="hidden fixed top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center items-center">
	<div class="bg-white p-4 rounded-lg text-center">
		<p>Verwende diesen Link, um diese Stelle im Transkipt zu teilen</p>
		<p id="sharing-link-url"></p>
		<p>Der Link zu dieser Transkriptstelle wurde bereits in deine Zwischenablage kopiert.</p>
		<button
			class="mt-4 bg-gray-200 text-gray-700 px-4 py-2 rounded-lg"
			onclick="document.getElementById('sharing-link-popup').classList.add('hidden')">Schlie√üen</button>
	</div>
</div>

